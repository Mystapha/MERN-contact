{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const getuser = createAsyncThunk(\"user/get\", async () => {\n  try {\n    let result = await axios.get(\"http://localhost:5001/user/\");\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const adduser = createAsyncThunk(\"user/get\", async () => {\n  try {\n    let result = await axios.get(\"http://localhost:5001/user/\");\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n});\nconst initialState = {\n  userlist: null,\n  status: null\n};\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getuser.pending, state => {\n      state.status = \"padding\";\n    }).addCase(getuser.fulfilled, (state, action) => {\n      state.status = \"success\";\n      state.userlist = action.payload.data.user;\n    }).addCase(getuser.rejected, state => {\n      state.status = \"fail\";\n    });\n  }\n});\n\n// Action creators are generated for each case reducer function\n\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","getuser","result","get","error","console","log","adduser","initialState","userlist","status","userSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","data","user","rejected","reducer"],"sources":["C:/Users/moust/OneDrive/Bureau/contactback/client/src/redux/userslice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport axios from 'axios';\r\n\r\n\r\nexport const getuser=createAsyncThunk(\"user/get\",async()=>{\r\n    try {\r\n        let result=await axios.get(\"http://localhost:5001/user/\");\r\n        return result;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n})\r\nexport const adduser=createAsyncThunk(\"user/get\",async()=>{\r\n  try {\r\n      let result=await axios.get(\"http://localhost:5001/user/\");\r\n      return result;\r\n  } catch (error) {\r\n      console.log(error);\r\n  }\r\n})\r\n\r\n\r\n\r\nconst initialState = {\r\n  userlist: null,\r\n  status:null\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n   \r\n  },\r\n  extraReducers:(builder) =>{\r\n    builder\r\n    .addCase(getuser.pending,(state)=>{\r\n        state.status = \"padding\";\r\n    })\r\n    .addCase(getuser.fulfilled,(state,action)=>{\r\n        state.status=\"success\";\r\n        state.userlist=action.payload.data.user;\r\n    })\r\n    .addCase(getuser.rejected,(state)=>{\r\n        state.status = \"fail\";\r\n    })\r\n  },\r\n\r\n\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\n\r\n\r\nexport default userSlice.reducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAO,MAAMC,OAAO,GAACH,gBAAgB,CAAC,UAAU,EAAC,YAAS;EACtD,IAAI;IACA,IAAII,MAAM,GAAC,MAAMF,KAAK,CAACG,GAAG,CAAC,6BAA6B,CAAC;IACzD,OAAOD,MAAM;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC,CAAC;AACF,OAAO,MAAMG,OAAO,GAACT,gBAAgB,CAAC,UAAU,EAAC,YAAS;EACxD,IAAI;IACA,IAAII,MAAM,GAAC,MAAMF,KAAK,CAACG,GAAG,CAAC,6BAA6B,CAAC;IACzD,OAAOD,MAAM;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACF,CAAC,CAAC;AAIF,MAAMI,YAAY,GAAG;EACnBC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAC;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGZ,WAAW,CAAC;EACnCa,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE,CAEV,CAAC;EACDC,aAAa,EAAEC,OAAO,IAAI;IACxBA,OAAO,CACNC,OAAO,CAACf,OAAO,CAACgB,OAAO,EAAEC,KAAK,IAAG;MAC9BA,KAAK,CAACR,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDM,OAAO,CAACf,OAAO,CAACkB,SAAS,EAAC,CAACD,KAAK,EAACE,MAAM,KAAG;MACvCF,KAAK,CAACR,MAAM,GAAC,SAAS;MACtBQ,KAAK,CAACT,QAAQ,GAACW,MAAM,CAACC,OAAO,CAACC,IAAI,CAACC,IAAI;IAC3C,CAAC,CAAC,CACDP,OAAO,CAACf,OAAO,CAACuB,QAAQ,EAAEN,KAAK,IAAG;MAC/BA,KAAK,CAACR,MAAM,GAAG,MAAM;IACzB,CAAC,CAAC;EACJ;AAGF,CAAC,CAAC;;AAEF;;AAGA,eAAeC,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}